name: Mayhem
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # run at 1 AM UTC

env:
  REGISTRY: ghcr.io
  BIN_IMAGE_NAME: ${{ github.repository }}-bin
  API_IMAGE_NAME: ${{ github.repository }}-api
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  API_CONTAINER_NAME: 'demo-api'
  TARGET: forallsecure/xansec-mayhem-action-examples

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 'build'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        shared: [false]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            triplet: x64-linux

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.BIN_IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}

      - name: Set lowercase image name
        run: |
          echo "BIN_IMAGE_NAME=${GITHUB_REPOSITORY,,}-bin" >> ${GITHUB_ENV}
          echo "API_IMAGE_NAME=${GITHUB_REPOSITORY,,}-api" >> ${GITHUB_ENV}

      - name: Build and push binary Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          file: mayhem/bin.dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.BIN_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push api Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          file: mayhem/api.dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      bin_image: ${{ env.REGISTRY }}/${{ env.BIN_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
      api_image: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.BRANCH_NAME }}

  mayhem:
    needs: build
    name: 'fuzz'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mayhemfile:
          - mayhem/lighttpd.mayhemfile
          - mayhem/mayhemit.mayhemfile
          # Specify one or many Mayhemfiles here

    steps:
      - uses: actions/checkout@v3

      # Fuzz binaries
      - name: Start analysis for ${{ matrix.mayhemfile }}
        id: run-mayhem
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-url: ${{ secrets.MAYHEM_URL }}
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ needs.build.outputs.bin_image }} --file ${{ matrix.mayhemfile }} --duration 60
          sarif-output: bin.sarif
          junit-output: bin.junit
          coverage-output: coverage

      # Fuzz APIs
      - name: Run API container
        run: docker run --rm -d --network host --name ${{ env.API_CONTAINER_NAME }} ${{ needs.build.outputs.api_image }}

      - uses: ForAllSecure/mapi-action@v1
        name: Start analysis for API
        continue-on-error: true
        with:
          mapi-token: ${{ secrets.MAYHEM_TOKEN }}
          api-url: http://localhost:8000
          api-spec: http://localhost:8000/openapi.json
          target: ${{ env.TARGET }}
          sarif-report: api.sarif
          html-report: api.html

      - name: Stop API container
        run: docker kill ${{ env.API_CONTAINER_NAME }}

      - name: Archive Mayhem report
        uses: actions/upload-artifact@v3
        with:
          name: api-report
          path: api.html


      - name: Upload SARIF file(s)
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: |
            bin.sarif
            api.sarif

      - name: Upload JUNIT file(s)
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: bin.junit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/*.lcov
          flags: vulnerability-tests
          name: mayhem
